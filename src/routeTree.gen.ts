/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardProjectIdIndexImport } from './routes/dashboard/$projectId/index'
import { Route as DashboardProjectIdPlaygroundRouteImport } from './routes/dashboard/$projectId/playground/route'
import { Route as DashboardProjectIdPlaygroundIndexImport } from './routes/dashboard/$projectId/playground/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProjectIdIndexRoute = DashboardProjectIdIndexImport.update({
  id: '/$projectId/',
  path: '/$projectId/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProjectIdPlaygroundRouteRoute =
  DashboardProjectIdPlaygroundRouteImport.update({
    id: '/$projectId/playground',
    path: '/$projectId/playground',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardProjectIdPlaygroundIndexRoute =
  DashboardProjectIdPlaygroundIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardProjectIdPlaygroundRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/$projectId/playground': {
      id: '/dashboard/$projectId/playground'
      path: '/$projectId/playground'
      fullPath: '/dashboard/$projectId/playground'
      preLoaderRoute: typeof DashboardProjectIdPlaygroundRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/$projectId/': {
      id: '/dashboard/$projectId/'
      path: '/$projectId'
      fullPath: '/dashboard/$projectId'
      preLoaderRoute: typeof DashboardProjectIdIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/$projectId/playground/': {
      id: '/dashboard/$projectId/playground/'
      path: '/'
      fullPath: '/dashboard/$projectId/playground/'
      preLoaderRoute: typeof DashboardProjectIdPlaygroundIndexImport
      parentRoute: typeof DashboardProjectIdPlaygroundRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardProjectIdPlaygroundRouteRouteChildren {
  DashboardProjectIdPlaygroundIndexRoute: typeof DashboardProjectIdPlaygroundIndexRoute
}

const DashboardProjectIdPlaygroundRouteRouteChildren: DashboardProjectIdPlaygroundRouteRouteChildren =
  {
    DashboardProjectIdPlaygroundIndexRoute:
      DashboardProjectIdPlaygroundIndexRoute,
  }

const DashboardProjectIdPlaygroundRouteRouteWithChildren =
  DashboardProjectIdPlaygroundRouteRoute._addFileChildren(
    DashboardProjectIdPlaygroundRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProjectIdPlaygroundRouteRoute: typeof DashboardProjectIdPlaygroundRouteRouteWithChildren
  DashboardProjectIdIndexRoute: typeof DashboardProjectIdIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProjectIdPlaygroundRouteRoute:
    DashboardProjectIdPlaygroundRouteRouteWithChildren,
  DashboardProjectIdIndexRoute: DashboardProjectIdIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$projectId/playground': typeof DashboardProjectIdPlaygroundRouteRouteWithChildren
  '/dashboard/$projectId': typeof DashboardProjectIdIndexRoute
  '/dashboard/$projectId/playground/': typeof DashboardProjectIdPlaygroundIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/$projectId': typeof DashboardProjectIdIndexRoute
  '/dashboard/$projectId/playground': typeof DashboardProjectIdPlaygroundIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$projectId/playground': typeof DashboardProjectIdPlaygroundRouteRouteWithChildren
  '/dashboard/$projectId/': typeof DashboardProjectIdIndexRoute
  '/dashboard/$projectId/playground/': typeof DashboardProjectIdPlaygroundIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/dashboard/'
    | '/dashboard/$projectId/playground'
    | '/dashboard/$projectId'
    | '/dashboard/$projectId/playground/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/$projectId'
    | '/dashboard/$projectId/playground'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/dashboard/'
    | '/dashboard/$projectId/playground'
    | '/dashboard/$projectId/'
    | '/dashboard/$projectId/playground/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/$projectId/playground",
        "/dashboard/$projectId/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/$projectId/playground": {
      "filePath": "dashboard/$projectId/playground/route.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/$projectId/playground/"
      ]
    },
    "/dashboard/$projectId/": {
      "filePath": "dashboard/$projectId/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/$projectId/playground/": {
      "filePath": "dashboard/$projectId/playground/index.tsx",
      "parent": "/dashboard/$projectId/playground"
    }
  }
}
ROUTE_MANIFEST_END */
